version: "3.9"
     
services:
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    shm_size: 16G
    environment:
      - PUID=${PUID}
      - PGID=${GUID}
    volumes:
      - /home/mint/plexs-stack/jellyfin/config:/config
      - /data/hdd/media:/media
      - /data/hdd/documents:/documents
    devices:
      - /dev/dri:/dev/dri
    restart: 'unless-stopped'
    deploy:
      resources:
        limits:
          cpus: '3.0'
          memory: 2048M

    
  plex:
    hostname: plex-gtr6
    # image: lscr.io/linuxserver/plex:1.40.4
    image: plexinc/pms-docker:latest
    container_name: plex
    shm_size: 16G
    ports:
      - 32400:32400/tcp 
      - 3005:3005/tcp 
      - 8324:8324/tcp 
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp 
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    environment:
      - PUID=${PUID}
      - PGID=${GUID}
      - TZ=${TZ}
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
    devices:
     - /dev/dri:/dev/dri #Required for plex HW transcoding / QuickSync
    volumes:
      - /home/mint/plexs-stack/plex/config:/config
      - /data/hdd/media/:/media
    restart: unless-stopped
    labels:
      - traefik.http.services.plex.loadbalancer.server.port=32400
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

  #Radarr - used to find movies automatically
  radarr:
    image: lscr.io/linuxserver/radarr:nightly
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${GUID}
      - TZ=${TZ}
    volumes:
      - /home/mint/plexs-stack/radarr/config:/config
      - /data/hdd:/share #Access to the entire share
    #networks: #Does not connect to overseer if you use NPM
    #  - proxy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 256M
    
  #Sonarr - used to find tv shows automatically
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${GUID}
      - TZ=${TZ}
    volumes:
      - /home/mint/plexs-stack/sonarr/config:/config
      - /data/hdd:/share #Access to the entire share
    #networks: #Does not connect to overseer if you use NPM
    #  - proxy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 256M
  
  #Prowlarr - manages your Sonarr, Radarr and download client
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${GUID}
      - TZ=${TZ}
    volumes:
      - /home/mint/plexs-stack/prowlarr/config:/config
    #networks:
    #  - proxy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # #Autobrr - used to grab torrents using the trackers IRC channel - Increases seeding due to grabbing content before RSS feed
  # autobrr:
  #   container_name: autobrr
  #   image: ghcr.io/autobrr/autobrr:latest
  #   restart: unless-stopped
  #   environment:
  #     - TZ=${TZ}
  #     - PUID=${PUID}
  #     - PGID=${GUID}
  #   volumes:
  #     - /home/mint/plexs-stack/autobrr/config:/config
  #   ports:
  #     - 7474:7474

  #Flaresolerr - Used as a proxy server to bypass Cloudflare and DDoS-GUARD protection.
  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
      - TZ=${TZ}
    ports:
      - 8191:8191
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  #Qbittorent - torrenting software
  #
  #You can also use RuTorrent, Transmisson or Deluge
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    ports:
      - 8694:8694
    environment:
      - PUID=${PUID}
      - PGID=${GUID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
      - TORRENTING_PORT=8694 #Make sure to port forward this port in your router so you can seed more effectively
      - DOCKER_MODS=ghcr.io/vuetorrent/vuetorrent-lsio-mod:latest
    volumes:
      - /home/mint/plexs-stack/qbittorent/config:/config
      - /data/hdd:/share
      - /downloads:/downloads
    restart: unless-stopped
    labels:
      - traefik.http.services.qbittorrent.loadbalancer.server.port=8080
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G

  # transmission:
  #   image: lscr.io/linuxserver/transmission:latest
  #   container_name: transmission
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PUID}
  #     - TZ=Etc/UTC
  #     - TRANSMISSION_WEB_HOME= #optional
  #     - USER= #optional
  #     - PASS= #optional
  #     - WHITELIST= #optional
  #     - PEERPORT= #optional
  #     - HOST_WHITELIST= #optional
  #   volumes:
  #     - /home/mint/plexs-stack/transmission/data:/config
  #     - /data/hdd:/share
  #     - /data/ssd:/cache
  #   restart: unless-stopped
  #   labels:
  #     - traefik.http.services.transmission.loadbalancer.server.port=9091


  # flood:
  #   hostname: flood
  #   image: jesec/flood
  #   user: ${PUID}:${GUID}
  #   restart: unless-stopped
  #   command: --port 3001 --allowedpath /share
  #   environment:
  #     - HOME=/config
  #     - PUID=${PUID}
  #     - PGID=${PUID}
  #   volumes:
  #     - /home/mint/plexs-stack/flood/data:/config
  #     - /data/hdd:/share
  #   labels:
  #     - traefik.http.services.flood.loadbalancer.server.port=3001

  # #Tdarr - to transcode videos from one format to another like x265 or H.265
  # #
  # #This container requires a decent amount of horse power to run but will save space in the long run
  # tdarr:
  #   container_name: tdarr
  #   image: ghcr.io/haveagitgat/tdarr:latest
  #   restart: unless-stopped
  #   ports:
  #     - 8265:8265 # webUI port
  #     - 8266:8266 # server port
  #   environment:
  #     - TZ=${TZ}
  #     - PUID=${PUID}
  #     - PGID=${GUID}
  #     - UMASK_SET=002
  #     - nodeName=ServerNode
  #     - serverIP=0.0.0.0
  #     - serverPort=8266
  #     - webUIPort=8265
  #     - internalNode=true
  #     - inContainer=true
  #     - ffmpegVersion=6
  #   volumes:
  #     - /home/mint/plexs-stack/tdarr/server:/app/server
  #     - /home/mint/plexs-stack/tdarr/configs:/app/configs
  #     - /home/mint/plexs-stack/tdarr/logs:/app/logs
  #     - /data/hdd:/media
  #     - /transcode_cache:/temp
  #   devices:
  #    - /dev/dri:/dev/dri #Required for HW transcoding / QuickSync
      
  # #Bazarr - for subtitles. Try to use SRT format if you can rather than PGS due to performance issues
  bazarr:
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr:latest
    restart: unless-stopped
    environment:
      - PUID=${GUID}
      - PGID=${GUID}
      - TZ=${TZ}
    volumes:
      - /home/mint/plexs-stack/bazarr/config:/config
      - /data/hdd:/share
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=Asia/Ho_Chi_Minh
      - PORT=5055
    volumes:
      - /home/mint/plexs-stack/overseerr:/app/config
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 256M
      

  # #Wizarr - Allows you to create a share link that you can send to users to invite them to your media server
  # wizarr:
  #   container_name: wizarr
  #   image: ghcr.io/wizarrrr/wizarr:latest
  #   ports:
  #     - 5690:5690
  #   volumes:
  #     - /home/mint/plexs-stack/wizarr/data/database:/data/database

  # # Used to sync Trash Guides config's to radarr and sonarr
  # # Only accessible via command line! No GUI
  # recyclarr:
  #   image: ghcr.io/recyclarr/recyclarr
  #   container_name: recyclarr
  #   user: ${PUID}:${GUID}
  #   volumes:
  #     - /home/mint/plexs-stack/recyclarr/config:/config
  #   environment:
  #     - TZ=${TZ}

  # unmanic:
  #     container_name: unmanic
  #     image: josh5/unmanic:latest
  #     ports:
  #       - 5555:8888
  #     environment:
  #       - PUID=1000
  #       - PGID=1000
  #     volumes:
  #       - /home/mint/plexs-stack/unmanic/config:/config
  #       - /data/hdd/media/:/library
  #     devices:
  #       - /dev/dri:/dev/dri
